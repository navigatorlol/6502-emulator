#!/bin/python

rom=bytearray([0xEA]*65536)
rom[0x8000] = 0xA9
rom[0x8001] = 0x10
# LDA #$10 (Immediate)
rom[0x8002] = 0xAD
rom[0x8003] = 0x00
rom[0x8004] = 0x20
# LDA $2000 (Absolute)
rom[0x8005] = 0xA5
rom[0x8006] = 0x00
# LDA $00 (Zero Page)
rom[0x8007] = 0xB5
rom[0x8008] = 0x01
# LDA $01,X (Zero Page,X)

rom[0x8009] = 0xA2
rom[0x800A] = 0x05
# LDX #$05
rom[0x800B] = 0xAE
rom[0x800C] = 0x02
rom[0x800D] = 0x20
# LDX $2002
rom[0x800E] = 0xA0
rom[0x800F] = 0x03
# LDY #$03
rom[0x8010] = 0xAC
rom[0x8011] = 0x03
rom[0x8012] = 0x20
# LDY $2003

rom[0x8013] = 0x18
# CLC (Clear Carry)
rom[0x8014] = 0x69
rom[0x8015] = 0x05
# ADC #$05
rom[0x8016] = 0x6D
rom[0x8017] = 0x04
rom[0x8018] = 0x20
# ADC $2004

rom[0x8019] = 0x38
# SEC (Set Carry)
rom[0x801A] = 0xE9
rom[0x801B] = 0x02
# SBC #$02
rom[0x801C] = 0xED
rom[0x801D] = 0x05
rom[0x801E] = 0x20
# SBC $2005

rom[0x801F] = 0x8D
rom[0x8020] = 0x06
rom[0x8021] = 0x20
# STA $2006
rom[0x8022] = 0x85
rom[0x8023] = 0x10
# STA $10 (Zero Page)

rom[0x8024] = 0xAA                           # TAX
rom[0x8025] = 0x8A                           # TXA
rom[0x8026] = 0xA8                           # TAY
rom[0x8027] = 0x98                           # TYA

rom[0x8028] = 0x58                           # CLI
rom[0x8029] = 0x78                           # SEI

rom[0x802A] = 0xEA                           # NOP

# Prepare indirect jump table
rom[0x8030] = 0x4C
rom[0x8031] = 0x40
rom[0x8032] = 0x80
# JMP $8040
rom[0x8040] = 0x6C
rom[0x8041] = 0x50
rom[0x8042] = 0x80
# JMP ($8050)
rom[0x8050] = 0x60
rom[0x8051] = 0x80
# Table for indirect jump → $8060
rom[0x8060] = 0xEA
# NOP (final)

# Reset vector at 0xFFFC → JMP $8000
rom[0xFFFC] = 0x4c
rom[0xFFFD] = 0x00
rom[0xFFFE] = 0x80

with open("rom.bin", "wb") as out_file:
    out_file.write(rom)
